{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/core/services/api/api.service\";\nimport * as i3 from \"@angular/forms\";\nexport let NetworkComponent = /*#__PURE__*/(() => {\n  class NetworkComponent {\n    constructor(dialog, apiService) {\n      this.dialog = dialog;\n      this.apiService = apiService;\n      this.network = {\n        \"ssid\": \"\",\n        \"pass\": \"\"\n      };\n    }\n\n    ngOnInit() {\n      this.loadConfig();\n    }\n\n    loadConfig() {\n      this.apiService.getCurrentConfigData(true).subscribe(value => {\n        this.network.InternetConnection = value.InternetConnection;\n        this.network.WifiSSID = value.WifiSSID;\n        this.network.WifiPassword = value.WifiPassword;\n        this.network.Apn = value.Apn;\n        this.network.ApnUser = value.ApnUser;\n        this.network.ApnPassword = value.ApnPassword;\n        this.network.FWVersion = value.FWVersion;\n        this.network.Mac = value.Mac;\n      });\n    }\n\n    formatDate(value) {\n      const date = moment.utc(value);\n      return moment(date).local().format('YYYY-MM-DD HH:mm');\n    }\n\n    saveNetwork() {\n      console.log(this.network);\n      this.apiService.saveNetwork(this.network).subscribe(data => {\n        alert(\"Changes saved. DeepDeck should restart now!\");\n        this.loadConfig();\n      });\n    }\n\n  }\n\n  NetworkComponent.ɵfac = function NetworkComponent_Factory(t) {\n    return new (t || NetworkComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n\n  NetworkComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NetworkComponent,\n    selectors: [[\"app-network\"]],\n    decls: 26,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\", \"mb-3\"], [1, \"col-md-12\", \"left-align\"], [1, \"col-md-12\"], [1, \"float-right\", 2, \"font-size\", \"12px\"], [1, \"row\"], [1, \"form-group\", \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"pattern\", \".{32}\", \"title\", \"The field requires Chanel \", \"maxlength\", \"32\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"pattern\", \".{64}\", \"title\", \"The field requires Chanel \", \"maxlength\", \"64\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"mb-5\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function NetworkComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n        i0.ɵɵtext(3, \"Network\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"span\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"span\", 4);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 3)(12, \"h5\", 2);\n        i0.ɵɵtext(13, \"Wifi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"hr\");\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Wifi Network:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function NetworkComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.network.ssid = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 7);\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function NetworkComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.network.pass = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 10)(24, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function NetworkComponent_Template_button_click_24_listener() {\n          return ctx.saveNetwork();\n        });\n        i0.ɵɵtext(25, \"Save \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\"Firmware: \", ctx.network.FWVersion, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"MAC: \", ctx.network.Mac, \"\");\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.network.ssid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.network.pass);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.PatternValidator, i3.MaxLengthValidator, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}.container[_ngcontent-%COMP%]{padding:20px;margin-bottom:20px}.action_icon[_ngcontent-%COMP%]:hover{color:#3f51b4!important}\"]\n  });\n  return NetworkComponent;\n})();\nexport let DialogOverviewModelsDialog = /*#__PURE__*/(() => {\n  class DialogOverviewModelsDialog {\n    constructor(dialogRef, data) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  DialogOverviewModelsDialog.ɵfac = function DialogOverviewModelsDialog_Factory(t) {\n    return new (t || DialogOverviewModelsDialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  DialogOverviewModelsDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogOverviewModelsDialog,\n    selectors: [[\"dialog-models\"]],\n    decls: 0,\n    vars: 0,\n    template: function DialogOverviewModelsDialog_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return DialogOverviewModelsDialog;\n})();","map":null,"metadata":{},"sourceType":"module"}