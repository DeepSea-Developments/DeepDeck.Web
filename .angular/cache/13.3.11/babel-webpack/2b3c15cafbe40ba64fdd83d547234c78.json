{"ast":null,"code":"import { trigger, transition, style, animate, state, group, query, animateChild } from '@angular/animations';\nconst defaultDuration = '100ms';\nconst defaultMinWidth = '50px';\nconst defaultMaxWidth = '200px';\nconst defaultMinFontSize = '20px';\nconst defaultMaxFontSize = '24px';\nexport function mainContentAnimation(animationDuration = defaultDuration, minWidth = defaultMinWidth, maxWidth = defaultMaxWidth) {\n  return trigger('onSideNavChange', [state('close', style({\n    'margin-left': minWidth\n  })), state('open', style({\n    'margin-left': maxWidth\n  })), transition('close => open', animate(`${animationDuration} ease-in`)), transition('open => close', animate(`${animationDuration} ease-out`))]);\n}\nexport function sidebarAnimation(animationDuration = defaultDuration, minWidth = defaultMinWidth, maxWidth = defaultMaxWidth) {\n  return trigger('onSideNavChange', [state('close', style({\n    width: minWidth\n  })), state('open', style({\n    width: maxWidth\n  })), transition('close => open', group([query('@iconAnimation', animateChild()), query('@labelAnimation', animateChild()), animate(`${animationDuration} ease-in-out`)])), transition('open => close', group([query('@iconAnimation', animateChild()), query('@labelAnimation', animateChild()), animate(`${animationDuration} ease-in-out`)]))]);\n}\nexport function iconAnimation(animationDuration = defaultDuration, minFontSize = defaultMinFontSize, maxFontSize = defaultMaxFontSize) {\n  return trigger('iconAnimation', [state('open', style({\n    fontSize: maxFontSize\n  })), state('close', style({\n    fontSize: minFontSize\n  })), transition('close => open', animate(`${animationDuration} ease-in-out`)), transition('open => close', animate(`${animationDuration} ease-in-out`))]);\n}\nexport function labelAnimation(animationDuration = defaultDuration) {\n  return trigger('labelAnimation', [state('open', style({\n    display: 'inline',\n    opacity: 1\n  })), state('close', style({\n    display: 'none',\n    opacity: 0\n  })), transition('close => open', animate(`${animationDuration} ease-in-out`)), transition('open => close', animate(`${animationDuration} ease-in-out`))]);\n}","map":null,"metadata":{},"sourceType":"module"}