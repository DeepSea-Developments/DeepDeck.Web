{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/api/api.service\";\nimport * as i2 from \"@angular/forms\";\nexport let FirmwareComponent = /*#__PURE__*/(() => {\n  class FirmwareComponent {\n    constructor(apiService) {\n      this.apiService = apiService;\n    }\n\n    ngOnInit() {}\n\n    reset() {\n      this.apiService.resetDevice({\n        reset: true\n      }).subscribe(data => {\n        alert(\"El dispositivo se esta reiniciando!\");\n      });\n    }\n\n    upload() {\n      let filePath = this.filePath;\n      let upload_path = \"/upload/\";\n      let fileInput = this.fileInput;\n      /* Max size of an individual file. Make sure this\n       * value is same as that set in file_server.c */\n\n      var MAX_FILE_SIZE = 200 * 1024;\n\n      if (fileInput.length == 0) {\n        alert(\"No file selected!\");\n      } else if (fileInput[0].size > MAX_FILE_SIZE) {\n        alert(\"File size must be less than 200KB!\");\n      } else {\n        // document.getElementById(\"newfile\").disabled = true;\n        // document.getElementById(\"filepath\").disabled = true;\n        // document.getElementById(\"upload\").disabled = true;\n        var file = fileInput[0];\n        var xhttp = new XMLHttpRequest();\n\n        xhttp.onreadystatechange = function () {\n          if (xhttp.readyState == 4) {\n            if (xhttp.status == 200) {\n              document.open();\n              document.write(xhttp.responseText);\n              document.close();\n            } else if (xhttp.status == 0) {\n              alert(\"Server closed the connection abruptly!\");\n              location.reload();\n            } else {\n              alert(xhttp.status + \" Error!\\n\" + xhttp.responseText);\n              location.reload();\n            }\n          }\n        };\n\n        xhttp.open(\"POST\", upload_path, true);\n        xhttp.send(file);\n      }\n    }\n\n  }\n\n  FirmwareComponent.ɵfac = function FirmwareComponent_Factory(t) {\n    return new (t || FirmwareComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n\n  FirmwareComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FirmwareComponent,\n    selectors: [[\"app-firmware\"]],\n    decls: 20,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-12\", \"right-align\", 2, \"margin\", \"0px\"], [1, \"col-md-12\", \"left-align\"], [\"border\", \"0\", 1, \"fixed\"], [\"width\", \"1000px\"], [\"width\", \"500px\"], [\"border\", \"0\"], [\"id\", \"newfile\", \"type\", \"file\", 2, \"width\", \"100%\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"upload\", \"type\", \"button\", 1, \"btn\", \"btn-info\", \"mt-3\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"ml-2\", \"mt-3\", 3, \"click\"]],\n    template: function FirmwareComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4, \"Firmware\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"table\", 4);\n        i0.ɵɵelement(6, \"col\", 5)(7, \"col\", 6);\n        i0.ɵɵelementStart(8, \"tr\")(9, \"td\")(10, \"table\", 7)(11, \"tr\")(12, \"td\")(13, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function FirmwareComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.fileInput = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"tr\")(15, \"td\")(16, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function FirmwareComponent_Template_button_click_16_listener() {\n          return ctx.upload();\n        });\n        i0.ɵɵtext(17, \"Subir Archivo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function FirmwareComponent_Template_button_click_18_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(19, \"Reiniciar \");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.fileInput);\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}.container[_ngcontent-%COMP%]{padding:20px;margin-bottom:20px}\"]\n  });\n  return FirmwareComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}